apiVersion: v1
kind: ConfigMap
metadata:
  name: rds-backup-scripts
data:
  create-manual-backup.sh: |
    #!/bin/bash
    datestamp=$(date +%F)
    function createBackup()
    {
      if [ -z $1 ]; then
        echo "[$(date +%T)] No database name provided. Exiting function."
        return 1
      fi

      database_name="$1"
      echo "[$(date +%T)] Starting to create a auto manual backup of rds $database_name "

      rds_backup_id=$(
        openstack rds backup create \
          --description "backup from $database_name-$datestamp" \
          "{{ .Release.Name }}-$database_name-$datestamp" \
          $database_name -f json | \
          jq --raw-output '.id'
      )
      if [ -z $rds_backup_id ]; then
          exit 1
      fi

      echo " Creating Backup $database_name-$datestamp in progress..."
      size=0
      while [[ $size -eq 0 ]]
      do
        size=$(openstack rds backup list --backup-id $rds_backup_id $database_name -f json | jq -r '.[] | ."Size (KB)"')
        if [ -z $size ]; then
          exit 1
        fi
        sleep 15
      done
      echo "[$(date +%T)] Finished with manual rds backup of db: $database_name"
    }

    for var in "$@"
    do
      createBackup "$var"
    done

  cleanup-manual-backups.sh: |
    function keepOnlyLastNBackups() {
      database_name="$1"
      num_backups_to_keep="$2"
    
      backupIds=$(openstack rds backup list --backup-type="manual" --offset="$num_backups_to_keep" --format=json "$database_name" | jq -r '.[].ID')
      while read -r backupId
      do
        echo "[$(date +%T)] Removing backup with id $backupId on $database_name"
        openstack rds backup delete "$backupId"
      done <<< "$backupIds"
    }

    for var in "$@"
    do
      keepOnlyLastNBackups "$var" {{ .Values.keepDays }}
    done
    
